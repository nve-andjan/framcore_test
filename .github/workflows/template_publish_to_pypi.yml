name: Template to prepare publishing packages to PyPI

on:
  workflow_call:
    inputs:
      package_name:
        description: 'Name of the package (e.g., framcore, framdata, framjules)'
        required: true
        type: string
      python_version:
        description: 'Python version to use'
        required: false
        type: string
        default: '3.12'

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Verify project structure
      run: |
        echo "Project structure for ${{ inputs.package_name }}:"
        ls -la
        echo "Poetry configuration:"
        poetry config --list
        echo "pyproject.toml exists:"
        ls -la pyproject.toml || echo "‚ùå No pyproject.toml found"
        echo "Package directory exists:"
        ls -la ${{ inputs.package_name }}/ || echo "‚ùå No ${{ inputs.package_name }} directory found"
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Build distribution with Poetry
      run: |
        echo "Building distribution packages for ${{ inputs.package_name }}..."
        poetry build
        echo "Built packages:"
        ls -la dist/
    
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.package_name }}-dist
        path: dist/
